#
#    See the NOTICE file distributed with this work for additional information
#    regarding copyright ownership.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

name: daily run for taf

on:
  schedule:
    - cron: 0 5 * * *
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [16.x]
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    runs-on: ${{ matrix.os }}
    env:
      USER_ID: 1001
      GROUP_ID: 1001
      
      OAUTH_CLIENT_ID: APP-ZX6M8LSAN3YIIAQ5
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_DOMAIN: localhost
      
      DB_PASSWORD: postgres
      DB_SERVER: dbserver:5432
      DB_NAME: bidb
      DB_USER: postgres
      ADMIN_ORCID: 0000-0003-0437-8310
      
      API_INTERNAL_PORT: 8081
      API_INTERNAL_TEST_PORT: 8082

      BRAPI_SERVER_PORT: 8080

      BRAPI_DEFAULT_URL: http://brapiserver:8080
      BRAPI_REFERENCE_SOURCE: breeding-insight.net
      BRAPI_DB_SERVER: dbserver:5432
      BRAPI_DB: postgres
      BRAPI_DB_USER: postgres
      BRAPI_DB_PASSWORD: postgres
      WEB_BASE_URL: http://localhost
      API_BASE_URL: http://localhost
      REGISTERED_DOMAIN: localhost
      EMAIL_RELAY_HOST: mailhog
      EMAIL_RELAY_PORT: 1025
      EMAIL_FROM: bidevteam@cornell.edu
    
    #services:
    #  selenium:
    #    image: selenium/standalone-chrome

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    
    #check out docker stuff
    - name: Docker checkout (private)
      uses: actions/checkout@v2
      with:
       repository: Breeding-Insight/bi-docker-stack
       token: ${{ secrets.DOCKERPATH }}
       path: bi-docker-stack
    
    - run: npm install
    
    - name: Set up JDK 13
      uses: actions/setup-java@v1.4.3
      with:
          java-version: 13
          
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@stable
      #run: |
      #  sudo apt-get update
      #  sudo apt-get --only-upgrade install google-chrome-stable
      #  google-chrome --version
      #uses: browser-actions/setup-chrome@90.0.4430
      #run: |
      #    VERSION_STRING="88.0.4324.96-1"
      #    wget "https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_90.0.4430_amd64.deb"
      #    sudo dpkg -i "google-chrome-stable_90.0.4430_amd64.deb"
      if: matrix.os == 'ubuntu-latest'
      
    - name: Get chrome stable
      uses: ./dist/
      with:
       chrome-version: stable
      
    - name: Run Chrome
      if: matrix.os == 'ubuntu-latest'
      run: chrome --version
       
    - name: Set up compatible chromedriver
      uses: nanasess/setup-chromedriver@91.0.4472
      
    - name: Set up Edge
      uses: browser-actions/setup-edge@latest
      if: matrix.os == 'windows-latest'

    #from bi-docker-stack
    - run: docker-compose -f bi-docker-stack/docker-compose.yml -f bi-docker-stack/docker-compose-qa.yml up -d
    
    - name: Run tests on Chrome
      if: matrix.os == 'ubuntu-latest'
    #- run: npm ci #unclear if needed
    #- run: npm run build --if-present #unclear if needed
      #run: npm run test:chrome
      #run: |
      #  $Env:CHROMIUM_BIN = "chrome"
      #  npm run test:chrome --headless --no-sandbox
      run: npm run test:chrome --headless --no-sandbox
      
    - name: Run tests on Edge
      if: matrix.os == 'windows-latest'
      run: npm run test:edge
    
    - name: save-report #check this works
      run: |	
        mkdir -p ${{ github.workspace }}/artifact
        echo hello > ${{ github.workspace }}/artifact/reports/index.html
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ env.name }}-cucumber-report-${{ matrix.os }} #TODO modify matrix to have file name be chrome/edge
        path:  ${{ github.workspace }}/artifact/**/*

    
    
    
    
