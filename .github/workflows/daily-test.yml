name: daily run for taf

on:
  #schedule:
  #  - cron: 0 5 * * *
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest]
        node-version: [16.x]
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        
    runs-on: ${{ matrix.os }}
    env:
      USER_ID: 1001
      GROUP_ID: 1001
      
      OAUTH_CLIENT_ID: APP-ZX6M8LSAN3YIIAQ5
      OAUTH_CLIENT_SECRET: ${{ secrets.OAUTH_CLIENT_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      JWT_DOMAIN: localhost
      
      DB_PASSWORD: postgres
      DB_SERVER: dbserver:5432
      DB_NAME: bidb
      DB_USER: postgres
      ADMIN_ORCID: 0000-0003-0437-8310
      
      API_INTERNAL_PORT: 8081
      API_INTERNAL_TEST_PORT: 8082

      BRAPI_SERVER_PORT: 8080

      BRAPI_DEFAULT_URL: http://brapiserver:8080
      BRAPI_REFERENCE_SOURCE: breeding-insight.net
      BRAPI_DB_SERVER: dbserver:5432
      BRAPI_DB: postgres
      BRAPI_DB_USER: postgres
      BRAPI_DB_PASSWORD: postgres
      WEB_BASE_URL: http://localhost
      API_BASE_URL: http://localhost
      REGISTERED_DOMAIN: localhost
      EMAIL_RELAY_HOST: mailhog
      EMAIL_RELAY_PORT: 1025
      EMAIL_FROM: bidevteam@cornell.edu

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    
    #check out docker
    - name: Docker checkout (private)
      uses: actions/checkout@v2
      with:
       repository: Breeding-Insight/bi-docker-stack
       token: ${{ secrets.DOCKERPATH }}
       path: bi-docker-stack
    
    - run: npm install
    
    - name: set up debug for github actions
      run: npm install --save-prod @actions/github @actions/core
    
    - name: Set up JDK 13
      uses: actions/setup-java@v1.4.3
      with:
          java-version: 13
          
      #from bi-docker-stack
    - run: docker-compose -f bi-docker-stack/docker-compose.yml -f bi-docker-stack/docker-compose-qa.yml up -d
          
    - name: Set up Chrome
      uses: browser-actions/setup-chrome@latest
      if: matrix.os == 'ubuntu-latest'
      
    - name: Run Chrome
      if: matrix.os == 'ubuntu-latest'
      run: chrome --version
      
    - name: Set up Edge
      uses: browser-actions/setup-edge@latest
      if: matrix.os == 'windows-latest'
    
    - name: Sleep to ensure docker set up
      run: sleep 60s
      shell: bash
      
    - name: try setting up species again
      run: docker exec brapi-server psql -U postgres -a -f bi-docker-stack/brapi-server/sql/species.sql -d postgres
      
    #- uses: actions/checkout@v2
    - name: set up required bidb data for tests
      #shell: bash #'script -q -e -c "bash {0}"'    
      run: | 
        docker cp populate-taf-data.sql bidb:/populate-taf-data.sql
        docker exec bidb psql -U postgres -a -f populate-taf-data.sql -d bidb 
        
    #-v filePath="${{ github.workspace }}/programIds.json"  #eventually remove a cause output messy
    
    - name: set up brapi data
      run: |
        trailMixId=$( docker exec bidb psql -U postgres -d bidb -t -c "SELECT id FROM program WHERE name='Trail Mix'" )
        snacksId=$( docker exec bidb psql -U postgres -d bidb -t -c "SELECT id FROM program WHERE name='Snacks'" )
        snacksId="$(echo -e "${snacksId}" | sed -e 's/^[[:space:]]*//')"
        trailMixId="$(echo -e "${trailMixId}" | sed -e 's/^[[:space:]]*//')"
        docker ps -a
        docker logs brapi-server
        docker logs biapi
        docker logs biweb
        docker inspect --format "{{json .State.Health }}" brapi-server | jq
        docker exec brapi-server curl --header "Content-Type: application/json;charset=UTF-8" -v -d '[{"programName":"Snacks","externalReferences":[{"referenceSource":"breeding-insight.net","referenceID":"'"$snacksId"'"}]}]' http://localhost:8080/brapi/v2/programs
        docker exec brapi-server curl --header "Content-Type: application/json;charset=UTF-8" -v -d '[{"programName":"Trail Mix","externalReferences":[{"referenceSource":"breeding-insight.net","referenceID":"'"$trailMixId"'"}]}]' http://localhost:8080/brapi/v2/programs
        
    - name: Run tests on Chrome
      if: matrix.os == 'ubuntu-latest'
      run: npm run test:chromeSingle --headless --disable-gpu
      
    - name: Run tests on Edge
      if: matrix.os == 'windows-latest'
      run: npm run test:edge
      
    - name: Publish Report Artifact
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: cucumber-report-${{ matrix.os }}-${{ github.run_number }} #TODO modify matrix to have file name be chrome/edge
        path: ${{ github.workspace }}/report/*
        #path: ${{ github.workspace }}/artifact/reports
        
    - name: test end of run container status 
      run: |
        docker logs brapi-server
        docker logs biapi
        docker logs biweb
    
    
    
    
